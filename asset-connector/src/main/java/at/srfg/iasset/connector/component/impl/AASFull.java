/*
 * Copyright (c) 2021 Fraunhofer-Gesellschaft zur Foerderung der angewandten Forschung e. V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package at.srfg.iasset.connector.component.impl;

import java.util.Arrays;
import java.util.Base64;

import org.eclipse.aas4j.v3.model.AssetAdministrationShell;
import org.eclipse.aas4j.v3.model.AssetKind;
import org.eclipse.aas4j.v3.model.ConceptDescription;
import org.eclipse.aas4j.v3.model.DataTypeDefXsd;
import org.eclipse.aas4j.v3.model.DataTypeIEC61360;
import org.eclipse.aas4j.v3.model.Direction;
import org.eclipse.aas4j.v3.model.EntityType;
import org.eclipse.aas4j.v3.model.Environment;
import org.eclipse.aas4j.v3.model.KeyTypes;
import org.eclipse.aas4j.v3.model.LevelType;
import org.eclipse.aas4j.v3.model.ModelingKind;
import org.eclipse.aas4j.v3.model.ReferenceTypes;
import org.eclipse.aas4j.v3.model.StateOfEvent;
import org.eclipse.aas4j.v3.model.Submodel;
import org.eclipse.aas4j.v3.model.impl.DefaultAdministrativeInformation;
import org.eclipse.aas4j.v3.model.impl.DefaultAnnotatedRelationshipElement;
import org.eclipse.aas4j.v3.model.impl.DefaultAssetAdministrationShell;
import org.eclipse.aas4j.v3.model.impl.DefaultAssetInformation;
import org.eclipse.aas4j.v3.model.impl.DefaultBasicEventElement;
import org.eclipse.aas4j.v3.model.impl.DefaultBlob;
import org.eclipse.aas4j.v3.model.impl.DefaultCapability;
import org.eclipse.aas4j.v3.model.impl.DefaultConceptDescription;
import org.eclipse.aas4j.v3.model.impl.DefaultDataSpecification;
import org.eclipse.aas4j.v3.model.impl.DefaultDataSpecificationIEC61360;
import org.eclipse.aas4j.v3.model.impl.DefaultEntity;
import org.eclipse.aas4j.v3.model.impl.DefaultEnvironment;
import org.eclipse.aas4j.v3.model.impl.DefaultFile;
import org.eclipse.aas4j.v3.model.impl.DefaultKey;
import org.eclipse.aas4j.v3.model.impl.DefaultLangString;
import org.eclipse.aas4j.v3.model.impl.DefaultMultiLanguageProperty;
import org.eclipse.aas4j.v3.model.impl.DefaultOperation;
import org.eclipse.aas4j.v3.model.impl.DefaultOperationVariable;
import org.eclipse.aas4j.v3.model.impl.DefaultProperty;
import org.eclipse.aas4j.v3.model.impl.DefaultQualifier;
import org.eclipse.aas4j.v3.model.impl.DefaultRange;
import org.eclipse.aas4j.v3.model.impl.DefaultReference;
import org.eclipse.aas4j.v3.model.impl.DefaultReferenceElement;
import org.eclipse.aas4j.v3.model.impl.DefaultRelationshipElement;
import org.eclipse.aas4j.v3.model.impl.DefaultSpecificAssetId;
import org.eclipse.aas4j.v3.model.impl.DefaultSubmodel;
import org.eclipse.aas4j.v3.model.impl.DefaultSubmodelElementCollection;
import org.eclipse.aas4j.v3.model.impl.DefaultValueList;
import org.eclipse.aas4j.v3.model.impl.DefaultValueReferencePair;

import at.srfg.iasset.repository.utils.ReferenceUtils;

// TODO import org.eclipse.aas4j.v3.rc02.model.impl.DefaultEmbeddedDataSpecification;


public class AASFull {

	public static final AssetAdministrationShell AAS_BELT_TEMPLATE = createTypeAasForBelt();
	public static final AssetAdministrationShell AAS_BELT_INSTANCE = createInstanceAasForBelt();
	public static final Submodel SUBMODEL_BELT_PROPERTIES_TEMPLATE = createSubmodelTemplateForBeltProperties();
	public static final Submodel SUBMODEL_BELT_PROPERTIES_INSTANCE = createSubmodelInstanceForBeltProperties();
	public static final Submodel SUBMODEL_BELT_EVENT_TEMPLATE = createSubmodelTemplateForBeltEvents();
	public static final Submodel SUBMODEL_BELT_EVENT_INSTANCE = createSubmodelInstanceForBeltEvents();
	public static final Submodel SUBMODEL_BELT_OPERATIONS_TEMPLATE = createSubmodelTemplateForBeltOperation();
	public static final Submodel SUBMODEL_BELT_OPERATIONS_INSTANCE = createSubmodelInstanceForBeltOperation();
	
	public static final ConceptDescription CONCEPT_DESCRIPTION_MESSAGE_BROKER = createConceptDescriptionForMessageBroker();
	public static final ConceptDescription CONCEPT_DESCRIPTION_BELT_STATE = createConceptDescriptionForBeltState();
	
    public static final AssetAdministrationShell AAS_1 = createAAS1();
    public static final AssetAdministrationShell AAS_2 = createAAS2();
    public static final AssetAdministrationShell AAS_3 = createAAS3();
    public static final AssetAdministrationShell AAS_4 = createAAS4();
    public static final Submodel SUBMODEL_1 = createSubmodel1();
    public static final Submodel SUBMODEL_2 = createSubmodel2();
    public static final Submodel SUBMODEL_3 = createSubmodel3();
    public static final Submodel SUBMODEL_4 = createSubmodel4();
    public static final Submodel SUBMODEL_5 = createSubmodel5();
    public static final Submodel SUBMODEL_6 = createSubmodel6();
    public static final Submodel SUBMODEL_7 = createSubmodel7();
    public final static ConceptDescription CONCEPT_DESCRIPTION_1 = createConceptDescription1();
    public final static ConceptDescription CONCEPT_DESCRIPTION_2 = createConceptDescription2();
    public final static ConceptDescription CONCEPT_DESCRIPTION_3 = createConceptDescription3();
    public final static ConceptDescription CONCEPT_DESCRIPTION_4 = createConceptDescription4();
    public static final Environment ENVIRONMENT = createEnvironment();
    
    public static AssetAdministrationShell createTypeAasForBelt() {
    	return new DefaultAssetAdministrationShell.Builder()
    			.id("http://iasset.salzburgresearch.at/labor/belt#aas")
    			.idShort("belt")
    			.assetInformation(new DefaultAssetInformation.Builder()
    					.assetKind(AssetKind.TYPE)
    					.globalAssetId(ReferenceUtils.asGlobalReference(KeyTypes.GLOBAL_REFERENCE, "http://iasset.salzburgresearch.at/labor/belt"))
    					.specificAssetId(new DefaultSpecificAssetId.Builder()
    							.semanticId(ReferenceUtils.asGlobalReference(KeyTypes.GLOBAL_REFERENCE, "http://specificAssetId.belt.com"))
    							.build() )
    					.build())
    			.displayName(new DefaultLangString.Builder()
    					.language("de")
    					.text("i-Asset Type for Belt").build()
    				)
    			.administration(new DefaultAdministrativeInformation.Builder()
    					.version("V0.01")
    					.version("001")
    					.build() )
    			.build();
    }
    public static AssetAdministrationShell createInstanceAasForBelt() {
    	return new DefaultAssetAdministrationShell.Builder()
    			.id("http://iasset.salzburgresearch.at/labor/beltInstance")
    			.idShort("beltInstance")
    			.assetInformation(new DefaultAssetInformation.Builder()
    					.assetKind(AssetKind.TYPE)
    					.globalAssetId(ReferenceUtils.asGlobalReference(KeyTypes.GLOBAL_REFERENCE, "http://iasset.salzburgresearch.at/labor/belt"))
    					.specificAssetId(new DefaultSpecificAssetId.Builder()
    							.semanticId(ReferenceUtils.asGlobalReference(KeyTypes.GLOBAL_REFERENCE, "http://specificAssetId.belt.com"))
    							.build() )
    					.build())
    			.displayName(new DefaultLangString.Builder()
    					.language("de")
    					.text("i-Asset Type for Belt").build()
    				)
    			.administration(new DefaultAdministrativeInformation.Builder()
    					.version("V0.01")
    					.version("001")
    					.build() )
    			// point to the type aas
    			.derivedFrom(ReferenceUtils.toReference(createTypeAasForBelt()))
    			.build();
    }

    public static Submodel createSubmodelTemplateForBeltProperties() {
    	return new DefaultSubmodel.Builder()
    			.idShort("properties")
    			.id("http://iasset.salzburgresearch.at/labor/belt#properties")
    			.displayName(new DefaultLangString.Builder()
    					.language("de")
    					.text("i-Asset Belt-Propeties Submodel").build()
    					)
    			.description(new DefaultLangString.Builder()
    					.language("de")
    					.text("i-Asset Belt Properties Submodel")
    					.build())
    			.kind(ModelingKind.TEMPLATE)
    			// the belt-info-Type refers to it's parent type
//    			.semanticId(ReferenceUtils.toReference(createSubmodelForInfoModel()))
    			.submodelElement(new DefaultSubmodelElementCollection.Builder()
    					.idShort("beltData")
    	    			.displayName(new DefaultLangString.Builder()
    	    					.language("de")
    	    					.text("i-Asset Belt-Data Contaoner").build()
    	    					)
    	    			.kind(ModelingKind.TEMPLATE)
    	    			// TODO create concept description for belt data
    	    			.semanticId(new DefaultReference.Builder()
    					.type(ReferenceTypes.GLOBAL_REFERENCE)
    					.key(new DefaultKey.Builder()
    							.type(KeyTypes.GLOBAL_REFERENCE)
    							.value("http://iasset.salzburgresearch.at/beltDataEvent")
    							.build())
    					.build())
    	    			.value(new DefaultProperty.Builder()
    	    					.idShort("state")
    	    					.kind(ModelingKind.TEMPLATE)
    	    	    			.displayName(new DefaultLangString.Builder()
    	    	    					.language("de")
    	    	    					.text("Status Förderband (on/off)").build()
    	    	    					)
    	    	    			.valueType(DataTypeDefXsd.BOOLEAN)
    	    					.build())
    	    			.value(new DefaultProperty.Builder()
    	    					.idShort("moving")
    	    					.kind(ModelingKind.TEMPLATE)
    	    	    			.displayName(new DefaultLangString.Builder()
    	    	    					.language("de")
    	    	    					.text("Förderband in Bewegung(on/off)").build()
    	    	    					)
    	    	    			.valueType(DataTypeDefXsd.BOOLEAN)
    	    					.build())
    	    			.value(new DefaultProperty.Builder()
    	    					.idShort("direction")
    	    					.kind(ModelingKind.TEMPLATE)
    	    					.category("variable")
    	    	    			.displayName(new DefaultLangString.Builder()
    	    	    					.language("de")
    	    	    					.text("Bewegungsrichtung").build()
    	    	    					)
    	    	    			.valueType(DataTypeDefXsd.STRING)
    	    					.build())
    	    			.value(new DefaultProperty.Builder()
    	    					.idShort("distance")
    	    					.kind(ModelingKind.TEMPLATE)
    	    					.category("variable")
    	    	    			.displayName(new DefaultLangString.Builder()
    	    	    					.language("de")
    	    	    					.text("zurückgelegte Distanz").build()
    	    	    					)
    	    	    			.valueType(DataTypeDefXsd.DECIMAL)
    	    					.build())
    	    			.value(new DefaultProperty.Builder()
    	    					.idShort("timeElapsed")
    	    					.category("variable")
    	    					.kind(ModelingKind.TEMPLATE)
    	    	    			.displayName(new DefaultLangString.Builder()
    	    	    					.language("de")
    	    	    					.text("Bewegungsdauer gesamt").build()
    	    	    					)
    	    	    			.valueType(DataTypeDefXsd.DURATION)
    	    					.build())
    					.build())
    			.build();
    }
    public static Submodel createSubmodelInstanceForBeltProperties() {
    	return new DefaultSubmodel.Builder()
    			.idShort("properties")
    			.id("http://iasset.salzburgresearch.at/labor/beltInstance/properties")
    			.displayName(new DefaultLangString.Builder()
    					.language("de")
    					.text("i-Asset Belt-Propeties Submodel").build()
    					)
    			.description(new DefaultLangString.Builder()
    					.language("de")
    					.text("i-Asset Belt Properties Submodel")
    					.build())
    			.kind(ModelingKind.INSTANCE)
    			// the belt-info-Type refers to its parent type
    			.semanticId(ReferenceUtils.toReference(createSubmodelTemplateForBeltProperties()))
    			.submodelElement(new DefaultSubmodelElementCollection.Builder()
    					.idShort("beltData")
    	    			.displayName(new DefaultLangString.Builder()
    	    					.language("de")
    	    					.text("i-Asset Belt-Data Container").build()
    	    					)
    	    			.kind(ModelingKind.INSTANCE)
    	    			.semanticId(new DefaultReference.Builder()
    	    					.type(ReferenceTypes.MODEL_REFERENCE)
    	    					.key(new DefaultKey.Builder()
    	    							.type(KeyTypes.SUBMODEL)
    	    							.value("http://iasset.salzburgresearch.at/labor/belt#properties")
    	    							.build())
    	    					.key(new DefaultKey.Builder()
    	    							.type(KeyTypes.SUBMODEL_ELEMENT_COLLECTION)
    	    							.value("beltData")
    	    							.build())
    	    					.build())
    	    			.value(new DefaultProperty.Builder()
    	    					.idShort("state")
    	    	    			.semanticId(new DefaultReference.Builder()
    	    	    					.type(ReferenceTypes.MODEL_REFERENCE)
    	    	    					.key(new DefaultKey.Builder()
    	    	    							.type(KeyTypes.SUBMODEL)
    	    	    							.value("http://iasset.salzburgresearch.at/labor/belt#properties")
    	    	    							.build())
    	    	    					.key(new DefaultKey.Builder()
    	    	    							.type(KeyTypes.SUBMODEL_ELEMENT_COLLECTION)
    	    	    							.value("beltData")
    	    	    							.build())
    	    	    					.key(new DefaultKey.Builder()
    	    	    							.type(KeyTypes.PROPERTY)
    	    	    							.value("state")
    	    	    							.build())
    	    	    					.build())
    	    	    			.displayName(new DefaultLangString.Builder()
    	    	    					.language("de")
    	    	    					.text("Status Förderband (init/halt/left/right)").build()
    	    	    					)
    	    	    			.valueType(DataTypeDefXsd.STRING)
    	    					.build())
    	    			.value(new DefaultProperty.Builder()
    	    					.idShort("moving")
    	    	    			.displayName(new DefaultLangString.Builder()
    	    	    					.language("de")
    	    	    					.text("Förderband in Bewegung (on/off)").build()
    	    	    					)
    	    	    			.valueType(DataTypeDefXsd.BOOLEAN)
    	    					.build())
    	    			.value(new DefaultProperty.Builder()
    	    					.idShort("direction")
    	    					.category("variable")
    	    	    			.displayName(new DefaultLangString.Builder()
    	    	    					.language("de")
    	    	    					.text("Bewegungsrichtung (left/right)").build()
    	    	    					)
    	    	    			.valueType(DataTypeDefXsd.STRING)
    	    					.build())
    	    			.value(new DefaultProperty.Builder()
    	    					.idShort("distance")
    	    					.category("variable")
    	    	    			.displayName(new DefaultLangString.Builder()
    	    	    					.language("de")
    	    	    					.text("zurückgelegte Distanz (relativ)").build()
    	    	    					)
    	    	    			.valueType(DataTypeDefXsd.DECIMAL)
    	    					.build())
    	    			.value(new DefaultProperty.Builder()
    	    					.idShort("totalDistance")
    	    	    			.displayName(new DefaultLangString.Builder()
    	    	    					.language("de")
										.text("zurückgelegte Distanz (gesamt, absolut)").build()
    	    	    					)
    	    	    			.valueType(DataTypeDefXsd.DECIMAL)
    	    					.build())
    					.build())
    			.build();
    }
    /**
     * Create the {@link ConceptDescription} defining the property for the belt state
     * @return
     */
    public static ConceptDescription createConceptDescriptionForBeltState() {
    	return new DefaultConceptDescription.Builder()
    			.id("http://iasset.salzburgresearch.at/labor/belt/data/state")
    			.idShort("state")
    			.category("ConceptProperty")
    			.isCaseOf(ReferenceUtils.asGlobalReference(KeyTypes.GLOBAL_REFERENCE, "http://iasset.salzburgresearch.at/labor/belt/data/state"))
    			// Abbild aus Semantic Lookup!!
    			.embeddedDataSpecification(new DefaultDataSpecification.Builder()
    					.dataSpecificationContent(new DefaultDataSpecificationIEC61360.Builder()
    							.dataType(DataTypeIEC61360.STRING)
    							.preferredName(new DefaultLangString.Builder()
    									.language("de")
    									.text("On/Off Zustand des Förderbandes")
    									.build())
    							.valueList(new DefaultValueList.Builder()
    									.valueReferencePairs(new DefaultValueReferencePair.Builder()
    											.value("ON")
    											.valueId(ReferenceUtils.asGlobalReference(KeyTypes.GLOBAL_REFERENCE, "http://iasset.salzburgresearch.at/labor/belt/data/state/on"))
    											.build())
    									.valueReferencePairs(new DefaultValueReferencePair.Builder()
    											.value("OFF")
    											.valueId(ReferenceUtils.asGlobalReference(KeyTypes.GLOBAL_REFERENCE, "http://iasset.salzburgresearch.at/labor/belt/data/state/off"))
    											.build())
    									.build())
    							.build())
    					.build())
    			.build();
    }

    public static Submodel createSubmodelTemplateForBeltOperation() {
    	return new DefaultSubmodel.Builder()
    			.id("http://iasset.salzburgresearch.at/labor/belt#operations")
    			.idShort("operations")
    			.kind(ModelingKind.TEMPLATE)
    			.displayName(new DefaultLangString.Builder()
    					.language("de")
    					.text("Förderband Funktionen").build()
    					)
    			.submodelElement(new DefaultOperation.Builder()
    					.idShort("switchBusyLight")
    					.category("function")
    	    			.displayName(new DefaultLangString.Builder()
    	    					.language("de")
    	    					.text("Kontroll-Lampe ein/ausschalten").build()
    	    					)
    	    			.kind(ModelingKind.TEMPLATE)
    	    			.inoutputVariable(new DefaultOperationVariable.Builder()
    	    					.value(new DefaultProperty.Builder()
    	    							.idShort("state")
    	    							.category("constant")
    	    	    	    			.displayName(new DefaultLangString.Builder()
    	    	    	    					.language("de")
    	    	    	    					.text("Neuer Status für Kontroll-Lampe").build()
    	    	    	    					)
    	    	    	    			.valueType(DataTypeDefXsd.BOOLEAN)
    	    							.build())
    	    					.build())
    					.build())
    			.submodelElement(new DefaultOperation.Builder()
    					.idShort("moveBelt")
    					.category("function")
    	    			.displayName(new DefaultLangString.Builder()
    	    					.language("de")
    	    					.text("Band vor/zurück bewegen").build()
    	    					)
    	    			.kind(ModelingKind.TEMPLATE)
    	    			.inputVariable(new DefaultOperationVariable.Builder()
    	    					.value(new DefaultProperty.Builder()
    	    	    					.idShort("direction")
    	    	    					.category("constant")
    	    	    	    			.displayName(new DefaultLangString.Builder()
    	    	    	    					.language("de")
    	    	    	    					.text("Bewegungsrichtung").build()
    	    	    	    					)
    	    	    	    			.valueType(DataTypeDefXsd.STRING)
    	    	    					.build())
    	    					.value(new DefaultProperty.Builder()
    	    	    					.idShort("distance")
    	    	    					.category("constant")
    	    	    	    			.displayName(new DefaultLangString.Builder()
    	    	    	    					.language("de")
    	    	    	    					.text("Zurückzulegende Entfernung").build()
    	    	    	    					)
    	    	    	    			.valueType(DataTypeDefXsd.STRING)
    	    	    					.build())
    	    					.build())
    					.build())
    			.build();
    }
    public static Submodel createSubmodelInstanceForBeltOperation() {
    	return new DefaultSubmodel.Builder()
    			.id("http://iasset.salzburgresearch.at/labor/beltInstance/operations")
    			.idShort("operations")
    			.kind(ModelingKind.INSTANCE)
    			.displayName(new DefaultLangString.Builder()
    					.language("de")
    					.text("Förderband Funktionen").build()
    					)
    			.semanticId(ReferenceUtils.toReference(createSubmodelTemplateForBeltOperation()))
    			.submodelElement(new DefaultOperation.Builder()
    					.idShort("switchBusyLight")
    					.category("function")
    	    			.displayName(new DefaultLangString.Builder()
    	    					.language("de")
    	    					.text("Kontroll-Lampe ein/ausschalten").build()
    	    					)
    	    			.kind(ModelingKind.INSTANCE)
    	    			.inoutputVariable(new DefaultOperationVariable.Builder()
    	    					.value(new DefaultProperty.Builder()
    	    							.idShort("state")
    	    							.category("constant")
    	    	    	    			.displayName(new DefaultLangString.Builder()
    	    	    	    					.language("de")
    	    	    	    					.text("Neuer Status für Kontroll-Lampe").build()
    	    	    	    					)
    	    	    	    			.valueType(DataTypeDefXsd.BOOLEAN)
    	    							.build())
    	    					.build())
    					.build())
    			.submodelElement(new DefaultOperation.Builder()
    					.idShort("moveBelt")
    					.category("function")
    	    			.displayName(new DefaultLangString.Builder()
    	    					.language("de")
    	    					.text("Band vor/zurück bewegen").build()
    	    					)
    	    			.kind(ModelingKind.INSTANCE)
    	    			.inputVariable(new DefaultOperationVariable.Builder()
    	    					.value(new DefaultProperty.Builder()
    	    	    					.idShort("direction")
    	    	    					.category("constant")
    	    	    	    			.displayName(new DefaultLangString.Builder()
    	    	    	    					.language("de")
    	    	    	    					.text("Bewegungsrichtung").build()
    	    	    	    					)
    	    	    	    			.valueType(DataTypeDefXsd.STRING)
    	    	    					.build())
    	    					.value(new DefaultProperty.Builder()
    	    	    					.idShort("distance")
    	    	    					.category("constant")
    	    	    	    			.displayName(new DefaultLangString.Builder()
    	    	    	    					.language("de")
    	    	    	    					.text("Zurückzulegende Entfernung").build()
    	    	    	    					)
    	    	    	    			.valueType(DataTypeDefXsd.STRING)
    	    	    					.build())
    	    					.build())
    					.build())
    			.build();
    }

    public static Submodel createSubmodelTemplateForBeltEvents() {
    	return new DefaultSubmodel.Builder()
    			.id("http://iasset.salzburgresearch.at/labor/belt#events")
    			.idShort("events")
    			.kind(ModelingKind.TEMPLATE)
    			.displayName(new DefaultLangString.Builder()
    					.language("de")
    					.text("Förderband Ereignisse").build()
    					)
    			.semanticId(new DefaultReference.Builder()
    					.type(ReferenceTypes.GLOBAL_REFERENCE)
    					.key(new DefaultKey.Builder()
    							.type(KeyTypes.GLOBAL_REFERENCE)
    							.value("http://iasset.salzburgresearch.at/beltEvent")
    							.build())
    					.build())
    			.submodelElement(new DefaultBasicEventElement.Builder()
    					.idShort("beltEvent")
    					.kind(ModelingKind.TEMPLATE)
//    					.observed(new DefaultReference.Builder()
//    							.type(ReferenceTypes.MODEL_REFERENCE)
//    							.key(new DefaultKey.Builder()
//    									.type(KeyTypes.SUBMODEL)
//    									.value(createSubmodelTemplateForBeltProperties().getId())
//    									.build())
//    							.key(new DefaultKey.Builder()
//    									.type(KeyTypes.SUBMODEL_ELEMENT_COLLECTION)
//    									.value("beltData")
//    									.build())
//    							.build())
    					
    					// message broker acts as default information
    					.messageBroker(new DefaultReference.Builder()
    							.type(ReferenceTypes.MODEL_REFERENCE)
    							.key(new DefaultKey.Builder()
    									.type(KeyTypes.SUBMODEL)
    									.value("http://iasset.salzburgresearch.at/application#eventConfig")
    									.build())
    							.key(new DefaultKey.Builder()
    									.type(KeyTypes.SUBMODEL_ELEMENT_COLLECTION)
    									.value("messageBroker")
    									.build())
    							.build())
    					.build())
    			.build();
    }
    public static Submodel createSubmodelInstanceForBeltEvents() {
    	return new DefaultSubmodel.Builder()
    			.id("http://iasset.salzburgresearch.at/labor/beltInstance/events")
    			.idShort("events")
    			.kind(ModelingKind.INSTANCE)
    			.displayName(new DefaultLangString.Builder()
    					.language("de")
    					.text("Förderband Ereignisse").build()
    					)
    			.semanticId(ReferenceUtils.toReference(createSubmodelTemplateForBeltEvents()))
    			.submodelElement(new DefaultBasicEventElement.Builder()
    					.idShort("beltEvent")
    					.kind(ModelingKind.INSTANCE)
    					.direction(Direction.OUTPUT)
    					.state(StateOfEvent.ON)
    					.semanticId(new DefaultReference.Builder()
    							.type(ReferenceTypes.MODEL_REFERENCE)
    							.key(new DefaultKey.Builder()
    									.type(KeyTypes.SUBMODEL)
    									.value("http://iasset.salzburgresearch.at/labor/belt#events")
    									.build())
    							.key(new DefaultKey.Builder()
    									.type(KeyTypes.EVENT_ELEMENT)
    									.value("beltEvent")
    									.build())
    							.build())
    					.messageTopic("messageTopic")
    					.observed(new DefaultReference.Builder()
    							.type(ReferenceTypes.MODEL_REFERENCE)
    							.key(new DefaultKey.Builder()
    									.type(KeyTypes.SUBMODEL)
    									.value(createSubmodelInstanceForBeltProperties().getId())
    									.build())
    							.key(new DefaultKey.Builder()
    									.type(KeyTypes.SUBMODEL_ELEMENT_COLLECTION)
    									.value("beltData")
    									.build())
    							.build())
    					.messageBroker(new DefaultReference.Builder()
    							.type(ReferenceTypes.MODEL_REFERENCE)
    							.key(new DefaultKey.Builder()
    									.type(KeyTypes.SUBMODEL)
    									.value("http://iasset.salzburgresearch.at/application#eventConfig")
    									.build())
    							.key(new DefaultKey.Builder()
    									.type(KeyTypes.SUBMODEL_ELEMENT_COLLECTION)
    									.value("messageBroker")
    									.build())
    							.build())
    					.build())
    			.build();
    }
    public static ConceptDescription createConceptDescriptionForMessageBroker() {
        return new DefaultConceptDescription.Builder()
        		.id("http://iasset.salzburgresearch.at/data/messageBroker")
                .idShort("messageBroker")
                .category("ConceptClass")
                .descriptions(Arrays.asList(
                        new DefaultLangString.Builder().text("Concept referencing the messageBroker").language("en").build(),
                        new DefaultLangString.Builder().text("Concept zum MessageBroker ").language("de").build()
                        ))
                .administration(new DefaultAdministrativeInformation.Builder()
                        .version("0.9")
                        .revision("0")
                        .build())
                .isCaseOf(ReferenceUtils.asGlobalReference(KeyTypes.GLOBAL_REFERENCE, "http://iasset.salzburgresearch.at/data/messageBroker"))
                .build();
    }
    

    public static AssetAdministrationShell createAAS1() {
        return new DefaultAssetAdministrationShell.Builder()
                .idShort("TestAssetAdministrationShell")
                .descriptions(Arrays.asList(
                        new DefaultLangString.Builder().text("An Example Asset Administration Shell for the test application").language("en-us").build(),
                        new DefaultLangString.Builder().text("Ein Beispiel-Verwaltungsschale für eine Test-Anwendung").language("de").build()
                        ))
                .id("https://acplt.org/Test_AssetAdministrationShell")
                .administration(new DefaultAdministrativeInformation.Builder()
                        .version("0.9")
                        .revision("0")
                        .build())
                .derivedFrom(new DefaultReference.Builder()
                        .key(new DefaultKey.Builder()
                                .type(KeyTypes.ASSET_ADMINISTRATION_SHELL)
                                .value("https://acplt.org/TestAssetAdministrationShell2")
                                .build())
                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                        .build())
                .assetInformation(new DefaultAssetInformation.Builder()
                        .assetKind(AssetKind.INSTANCE)
                        .globalAssetId(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.ASSET_ADMINISTRATION_SHELL)
                                        .value("https://acplt.org/Test_Asset")
                                        .build())
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
                        //.billOfMaterial((new DefaultReference.Builder()
                        //        .key(new DefaultKey.Builder()
                        //                .type(KeyTypes.SUBMODEL)
                        //                .value("http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial")
                        //                .build()))
                        //        .build())
                        .build())
                .submodel(new DefaultReference.Builder()
                        .key(new DefaultKey.Builder()
                                .type(KeyTypes.SUBMODEL)
                                .value("https://acplt.org/Test_Submodel")
                                .build())
                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                        .build())
                .submodel(new DefaultReference.Builder()
                        .key(new DefaultKey.Builder()
                                .type(KeyTypes.SUBMODEL)
                                .value("http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial")
                                .build())
                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                        .build())
                .submodel(new DefaultReference.Builder()
                        .key(new DefaultKey.Builder()
                                .type(KeyTypes.SUBMODEL)
                                .value("http://acplt.org/Submodels/Assets/TestAsset/Identification")
                                .build())
                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                        .build())
                .submodel(new DefaultReference.Builder()
                        .key(new DefaultKey.Builder()
                                .type(KeyTypes.SUBMODEL)
                                .value(" https://acplt.org/Test_Submodel_Template")
                                .build())
                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                        .build())
                .build();
    }
    
    public static AssetAdministrationShell createAAS2() {
        return new DefaultAssetAdministrationShell.Builder()
                .idShort("Test_AssetAdministrationShell_Mandatory")
                .id("https://acplt.org/Test_AssetAdministrationShell_Mandatory")
                .assetInformation(new DefaultAssetInformation.Builder()
                        .assetKind(AssetKind.INSTANCE)
                        .globalAssetId(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.ASSET_ADMINISTRATION_SHELL)
                                        .value("https://acplt.org/Test_Asset_Mandatory")
                                        .build())
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
                        .build())
                .submodel(new DefaultReference.Builder()
                        .key(new DefaultKey.Builder()
                                .type(KeyTypes.SUBMODEL)
                                .value("https://acplt.org/Test_Submodel_Mandatory")
                                .build())
                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                        .build())
                .submodel(new DefaultReference.Builder()
                        .key(new DefaultKey.Builder()
                                .type(KeyTypes.SUBMODEL)
                                .value("https://acplt.org/Test_Submodel2_Mandatory")
                                .build())
                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                        .build())
                .build();
    }

    public static AssetAdministrationShell createAAS3() {
        return new DefaultAssetAdministrationShell.Builder()
                .idShort("Test_AssetAdministrationShell2_Mandatory")
                .id("https://acplt.org/Test_AssetAdministrationShell2_Mandatory")
                .assetInformation(new DefaultAssetInformation.Builder()
                        .assetKind(AssetKind.INSTANCE)
                        .globalAssetId(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.ASSET_ADMINISTRATION_SHELL)
                                        .value("https://acplt.org/Test_Asset_Mandatory")
                                        .build())
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
                        .build())
                .build();
    }

    public static AssetAdministrationShell createAAS4() {
        return new DefaultAssetAdministrationShell.Builder()
                .idShort("TestAssetAdministrationShell")
                .descriptions(Arrays.asList(
                        new DefaultLangString.Builder().text("An Example Asset Administration Shell for the test application").language("en-us").build(),
                        new DefaultLangString.Builder().text("Ein Beispiel-Verwaltungsschale für eine Test-Anwendung").language("de").build()
                        ))
                .id("https://acplt.org/Test_AssetAdministrationShell_Missing")
                .administration(new DefaultAdministrativeInformation.Builder()
                        .version("0.9")
                        .revision("0")
                        .build())
                .assetInformation(new DefaultAssetInformation.Builder()
                        .assetKind(AssetKind.INSTANCE)
                        .globalAssetId(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.ASSET_ADMINISTRATION_SHELL)
                                        .value("https://acplt.org/Test_Asset_Missing")
                                        .build())
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
                        .build())
                .submodel(new DefaultReference.Builder()
                        .key(new DefaultKey.Builder()
                                .type(KeyTypes.SUBMODEL)
                                .value("https://acplt.org/Test_Submodel_Missing")
                                .build())
                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                        .build())
                .build();
    }

    public static Submodel createSubmodel1() {
        return new DefaultSubmodel.Builder()
                .idShort("Identification")
                .descriptions(Arrays.asList(
                        new DefaultLangString.Builder().text("An example asset identification submodel for the test application").language("en-us").build(),
                        new DefaultLangString.Builder().text("Ein Beispiel-Identifikations-Submodel für eine Test-Anwendung").language("de").build()
                        ))
                .id("http://acplt.org/Submodels/Assets/TestAsset/Identification")
                .administration(new DefaultAdministrativeInformation.Builder()
                        .version("0.9")
                        .revision("0")
                        .build())
                .kind(ModelingKind.INSTANCE)
                .semanticId(new DefaultReference.Builder()
                        .key(new DefaultKey.Builder()
                                .type(KeyTypes.SUBMODEL)
                                .value("http://acplt.org/SubmodelTemplates/AssetIdentification")
                                .build())
                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                        .build())
                .submodelElement(new DefaultProperty.Builder()
                        .idShort("ManufacturerName")
                        .descriptions(Arrays.asList(
                                new DefaultLangString.Builder().text("Legally valid designation of the natural or judicial person which is directly responsible for the design, production, packaging and labeling of a product in respect to its being brought into circulation.").language("en-us").build(),
                                new DefaultLangString.Builder().text("Bezeichnung für eine natürliche oder juristische Person, die für die Auslegung, Herstellung und Verpackung sowie die Etikettierung eines Produkts im Hinblick auf das 'Inverkehrbringen' im eigenen Namen verantwortlich ist").language("de").build()
                                ))
                        .semanticId(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                        .value("0173-1#02-AAO677#002")
                                                .build()
                                        )
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
                        .qualifier(new DefaultQualifier.Builder()
                                .value("100")
                                .type("http://acplt.org/Qualifier/ExampleQualifier")
                                .valueType(DataTypeDefXsd.INT)
                                .build())
                        .qualifier(new DefaultQualifier.Builder()
                                .value("50")
                                .type("http://acplt.org/Qualifier/ExampleQualifier2")
                                .valueType(DataTypeDefXsd.INT)
                                .build())
                        .value("http://acplt.org/ValueId/ACPLT")
                        .valueType(DataTypeDefXsd.STRING)
                        .valueId(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                        .value("http://acplt.org/ValueId/ACPLT")
                                        .build())
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
                        .build())
                .submodelElement(new DefaultProperty.Builder()
                        .idShort("InstanceId")
                        .descriptions(Arrays.asList(
                                new DefaultLangString.Builder().text("Legally valid designation of the natural or judicial person which is directly responsible for the design, production, packaging and labeling of a product in respect to its being brought into circulation.").language("en-us").build(),
                                new DefaultLangString.Builder().text("Bezeichnung für eine natürliche oder juristische Person, die für die Auslegung, Herstellung und Verpackung sowie die Etikettierung eines Produkts im Hinblick auf das 'Inverkehrbringen' im eigenen Namen verantwortlich ist").language("de").build()
                                ))
                        .semanticId(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                        .value("http://opcfoundation.org/UA/DI/1.1/DeviceType/Serialnumber")
                                                .build()
                                        )
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
                        .value("978-8234-234-342")
                        .valueType(DataTypeDefXsd.STRING)
                        .valueId(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                        .value("978-8234-234-342")
                                        .build())
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
                        .build())
                .build();
    }

    public static Submodel createSubmodel2() {
        return new DefaultSubmodel.Builder()
                .idShort("BillOfMaterial")
                .descriptions(Arrays.asList(
                        new DefaultLangString.Builder().text("An example bill of material submodel for the test application").language("en-us").build(),
                        new DefaultLangString.Builder().text("Ein Beispiel-BillofMaterial-Submodel für eine Test-Anwendung").language("de").build()
                        ))
                .id("http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial")
                .administration(new DefaultAdministrativeInformation.Builder()
                        .version("0.9")
                        .build())
                .kind(ModelingKind.INSTANCE)
                .semanticId(new DefaultReference.Builder()
                        .key(new DefaultKey.Builder()
                                .type(KeyTypes.SUBMODEL)
                                .value("http://acplt.org/SubmodelTemplates/BillOfMaterial")
                                .build())
                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                        .build())
                .submodelElement(new DefaultEntity.Builder()
                        .idShort("ExampleEntity")
                        .descriptions(Arrays.asList(
                                new DefaultLangString.Builder().text("Legally valid designation of the natural or judicial person which is directly responsible for the design, production, packaging and labeling of a product in respect to its being brought into circulation.").language("en-us").build(),
                                new DefaultLangString.Builder().text("Bezeichnung für eine natürliche oder juristische Person, die für die Auslegung, Herstellung und Verpackung sowie die Etikettierung eines Produkts im Hinblick auf das 'Inverkehrbringen' im eigenen Namen verantwortlich ist").language("de").build()
                                ))
                        .semanticId(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                        .value("http://opcfoundation.org/UA/DI/1.1/DeviceType/Serialnumber")
                                        .build())
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
                        .statement(new DefaultProperty.Builder()
                                .idShort("ExampleProperty2")
                                .category("Constant")
                                .descriptions(Arrays.asList(
                                        new DefaultLangString.Builder().text("Example Property object").language("en-us").build(),
                                        new DefaultLangString.Builder().text("Beispiel Property Element").language("de").build()
                                        ))
                                .semanticId(new DefaultReference.Builder()
                                        .key(new DefaultKey.Builder()
                                                .type(KeyTypes.GLOBAL_REFERENCE)
                                                .value("http://acplt.org/Properties/ExampleProperty")
                                                .build())
                                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                                        .build())
                                .value("http://acplt.org/ValueId/ExampleValue2")
                                .valueType(DataTypeDefXsd.STRING)
                                .valueId(new DefaultReference.Builder()
                                        .key(new DefaultKey.Builder()
                                                .type(KeyTypes.GLOBAL_REFERENCE)
                                                .value("http://acplt.org/ValueId/ExampleValue2")
                                                .build())
                                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                                        .build())
                                .build())
                        .statement(new DefaultProperty.Builder()
                                .idShort("ExampleProperty")
                                .category("Constant")
                                .descriptions(Arrays.asList(
                                        new DefaultLangString.Builder().text("Example Property object").language("en-us").build(),
                                        new DefaultLangString.Builder().text("Beispiel Property Element").language("de").build()
                                        ))
                                .semanticId(new DefaultReference.Builder()
                                        .key(new DefaultKey.Builder()
                                                .type(KeyTypes.GLOBAL_REFERENCE)
                                                .value("http://acplt.org/Properties/ExampleProperty")
                                                .build())
                                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                                        .build())
                                .value("http://acplt.org/ValueId/ExampleValueId")
                                .valueType(DataTypeDefXsd.STRING)
                                .valueId(new DefaultReference.Builder()
                                        .key(new DefaultKey.Builder()
                                                .type(KeyTypes.GLOBAL_REFERENCE)
                                                .value("http://acplt.org/ValueId/ExampleValueId")
                                                .build())
                                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                                        .build())
                                .build())
                        .entityType(EntityType.CO_MANAGED_ENTITY)
                        .build())
                .submodelElement(new DefaultEntity.Builder()
                        .idShort("ExampleEntity2")
                        .descriptions(Arrays.asList(
                                new DefaultLangString.Builder().text("Legally valid designation of the natural or judicial person which is directly responsible for the design, production, packaging and labeling of a product in respect to its being brought into circulation.").language("en-us").build(),
                                new DefaultLangString.Builder().text("Bezeichnung für eine natürliche oder juristische Person, die für die Auslegung, Herstellung und Verpackung sowie die Etikettierung eines Produkts im Hinblick auf das 'Inverkehrbringen' im eigenen Namen verantwortlich ist").language("de").build()
                        ))
                        .semanticId(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                        .value("http://opcfoundation.org/UA/DI/1.1/DeviceType/Serialnumber")
                                        .build())
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
                        .entityType(EntityType.SELF_MANAGED_ENTITY)
                        .globalAssetId(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.ASSET_ADMINISTRATION_SHELL)
                                        .value("https://acplt.org/Test_Asset2")
                                        .build())
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
                        .build())
                .build();
    }

    public static Submodel createSubmodel3() {
        return new DefaultSubmodel.Builder()
                .idShort("TestSubmodel")
                .descriptions(Arrays.asList(
                        new DefaultLangString.Builder().text("An example submodel for the test application").language("en-us").build(),
                        new DefaultLangString.Builder().text("Ein Beispiel-Teilmodell für eine Test-Anwendung").language("de").build()
                        ))
                .id("https://acplt.org/Test_Submodel")
                .administration(new DefaultAdministrativeInformation.Builder()
                        .version("0.9")
                        .revision("0")
                        .build())
                .kind(ModelingKind.INSTANCE)
                .semanticId(new DefaultReference.Builder()
                        .key(new DefaultKey.Builder()
                                .type(KeyTypes.GLOBAL_REFERENCE)
                                .value("http://acplt.org/SubmodelTemplates/ExampleSubmodel")
                                .build())
                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                        .build())
                .submodelElement(new DefaultRelationshipElement.Builder()
                        .idShort("ExampleRelationshipElement")
                        .category("Parameter")
                        .descriptions(Arrays.asList(
                                new DefaultLangString.Builder().text("Example RelationshipElement object").language("en-us").build(),
                                new DefaultLangString.Builder().text("Beispiel RelationshipElement Element").language("de").build()
                                ))
                        .semanticId(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                        .value("http://acplt.org/RelationshipElements/ExampleRelationshipElement")
                                        .build())
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
                        .first(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.SUBMODEL)
                                        .value("https://acplt.org/Test_Submodel")
                                        .build())
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.SUBMODEL_ELEMENT_COLLECTION)
                                        .value("ExampleSubmodelCollectionOrdered")
                                        .build())
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.PROPERTY)
                                        .value("ExampleProperty")
                                        .build())
                                .type(ReferenceTypes.MODEL_REFERENCE)
                                .build())
                        .second(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.SUBMODEL)
                                        .value("http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial")
                                        .build())
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.ENTITY)
                                        .value("ExampleEntity")
                                        .build())
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.PROPERTY)
                                        .value("ExampleProperty2")
                                        .build())
                                .type(ReferenceTypes.MODEL_REFERENCE)
                                .build())
                        .build())
                .submodelElement(new DefaultAnnotatedRelationshipElement.Builder()
                        .idShort("ExampleAnnotatedRelationshipElement")
                        .category("Parameter")
                        .descriptions(Arrays.asList(
                                new DefaultLangString.Builder().text("Example AnnotatedRelationshipElement object").language("en-us").build(),
                                new DefaultLangString.Builder().text("Beispiel AnnotatedRelationshipElement Element").language("de").build()
                                ))
                        .semanticId(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                        .value("http://acplt.org/RelationshipElements/ExampleAnnotatedRelationshipElement")
                                        .build())
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
                        .first(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.SUBMODEL)
                                        .value("https://acplt.org/Test_Submodel")
                                        .build())
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.SUBMODEL_ELEMENT_COLLECTION)
                                        .value("ExampleSubmodelCollectionOrdered")
                                        .build())
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.PROPERTY)
                                        .value("ExampleProperty")
                                        .build())
                                .type(ReferenceTypes.MODEL_REFERENCE)
                                .build())
                        .second(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.SUBMODEL)
                                        .value("http://acplt.org/Submodels/Assets/TestAsset/BillOfMaterial")
                                        .build())
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.ENTITY)
                                        .value("ExampleEntity")
                                        .build())
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.PROPERTY)
                                        .value("ExampleProperty2")
                                        .build())
                                .type(ReferenceTypes.MODEL_REFERENCE)
                                .build())
                        .annotation(new DefaultProperty.Builder()
                                .kind(ModelingKind.INSTANCE)
                                .idShort("ExampleProperty3")
                                .category("Parameter")
                                .value("some example annotation")
                                .valueType(DataTypeDefXsd.STRING)
                                .build())
                        .build())
                .submodelElement(new DefaultOperation.Builder()
                        .idShort("ExampleOperation")
                        .kind(ModelingKind.TEMPLATE)
                        .category("Parameter")
                        .descriptions(Arrays.asList(
                                new DefaultLangString.Builder().text("Example Operation object").language("en-us").build(),
                                new DefaultLangString.Builder().text("Beispiel Operation Element").language("de").build()
                                ))
                        .semanticId(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                        .value("http://acplt.org/Operations/ExampleOperation")
                                        .build())
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
                        .inputVariable(new DefaultOperationVariable.Builder()
                                .value(new DefaultProperty.Builder()
                                        .idShort("ExampleProperty1")
                                        .category("Constant")
                                        .descriptions(Arrays.asList(
                                                new DefaultLangString.Builder().text("Example Property object").language("en-us").build(),
                                                new DefaultLangString.Builder().text("Beispiel Property Element").language("de").build()
                                                ))
                                        .semanticId(new DefaultReference.Builder()
                                                .key(new DefaultKey.Builder()
                                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                                        .value("http://acplt.org/Properties/ExampleProperty")
                                                        .build())
                                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                                .build())
                                        .value("http://acplt.org/ValueId/ExampleValueId")
                                        .valueId(new DefaultReference.Builder()
                                                .key(new DefaultKey.Builder()
                                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                                        .value("http://acplt.org/ValueId/ExampleValueId")
                                                        .build())
                                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                                .build())
                                        .valueType(DataTypeDefXsd.STRING)
                                        .build())
                                .build())
                        .outputVariable(new DefaultOperationVariable.Builder()
                                .value(new DefaultProperty.Builder()
                                        .idShort("ExampleProperty2")
                                        .category("Constant")
                                        .descriptions(Arrays.asList(
                                                new DefaultLangString.Builder().text("Example Property object").language("en-us").build(),
                                                new DefaultLangString.Builder().text("Beispiel Property Element").language("de").build()
                                                ))
                                        .semanticId(new DefaultReference.Builder()
                                                .key(new DefaultKey.Builder()
                                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                                        .value("http://acplt.org/Properties/ExampleProperty")
                                                        .build())
                                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                                .build())
                                        .value("http://acplt.org/ValueId/ExampleValueId")
                                        .valueId(new DefaultReference.Builder()
                                                .key(new DefaultKey.Builder()
                                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                                        .value("http://acplt.org/ValueId/ExampleValueId")
                                                        .build())
                                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                                .build())
                                        .valueType(DataTypeDefXsd.STRING)
                                        .build())
                                .build())
                        .inoutputVariable(new DefaultOperationVariable.Builder()
                                .value(new DefaultProperty.Builder()
                                        .idShort("ExampleProperty3")
                                        .category("Constant")
                                        .descriptions(Arrays.asList(
                                                new DefaultLangString.Builder().text("Example Property object").language("en-us").build(),
                                                new DefaultLangString.Builder().text("Beispiel Property Element").language("de").build()
                                                ))
                                        .semanticId(new DefaultReference.Builder()
                                                .key(new DefaultKey.Builder()
                                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                                        .value("http://acplt.org/Properties/ExampleProperty")
                                                        .build())
                                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                                .build())
                                        .value("http://acplt.org/ValueId/ExampleValueId")
                                        .valueId(new DefaultReference.Builder()
                                                .key(new DefaultKey.Builder()
                                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                                        .value("http://acplt.org/ValueId/ExampleValueId")
                                                        .build())
                                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                                .build())
                                        .valueType(DataTypeDefXsd.STRING)
                                        .build())
                                .build())
                        .build())
                .submodelElement(new DefaultCapability.Builder()
                        .idShort("ExampleCapability")
                        .category("Parameter")
                        .descriptions(Arrays.asList(
                                new DefaultLangString.Builder().text("Example Capability object").language("en-us").build(),
                                new DefaultLangString.Builder().text("Beispiel Capability Element").language("de").build()
                                ))
                        .semanticId(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                        .value("http://acplt.org/Capabilities/ExampleCapability")
                                        .build())
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
                        .build())
                .submodelElement(new DefaultBasicEventElement.Builder()
                        .idShort("ExampleBasicEvent")
                        .category("Parameter")
                        .direction(Direction.INPUT)
                        .state(StateOfEvent.ON)
                        .kind(ModelingKind.INSTANCE)
                        .descriptions(Arrays.asList(
                                new DefaultLangString.Builder().text("Example BasicEvent object").language("en-us").build(),
                                new DefaultLangString.Builder().text("Beispiel BasicEvent Element").language("de").build()
                                ))
                        .semanticId(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                        .value("http://acplt.org/Events/ExampleBasicEvent")
                                        .build())
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
//                        .messageBroker(new DefaultReference.Builder()
//                        		.key(new DefaultKey.Builder()
//                        				.type(KeyTypes.SUBMODEL)
//                        				.value("http://iasset.salzburgresearch.at/application#eventConfig")
//                        				.build())
//                        		.key(new DefaultKey.Builder()
//                        				.type(KeyTypes.SUBMODEL_ELEMENT_COLLECTION)
//                        				.value("messageBroker")
//                        				.build())
//                        		.build())
                        .observed(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.SUBMODEL)
                                        .value("https://acplt.org/Test_Submodel")
                                        .build())
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.SUBMODEL_ELEMENT_COLLECTION)
                                        .value("ExampleSubmodelCollectionOrdered")
                                        .build())
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.PROPERTY)
                                        .value("ExampleProperty")
                                        .build())
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
                        .build())
                .submodelElement(new DefaultSubmodelElementCollection.Builder()
                        .idShort("ExampleSubmodelCollectionOrdered")
                        .category("Parameter")
                        .descriptions(Arrays.asList(
                                new DefaultLangString.Builder().text("Example SubmodelElementCollectionOrdered object").language("en-us").build(),
                                new DefaultLangString.Builder().text("Beispiel SubmodelElementCollectionOrdered Element").language("de").build()
                                ))
                        .semanticId(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                        .value("http://acplt.org/SubmodelElementCollections/ExampleSubmodelElementCollectionOrdered")
                                        .build())
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
                        .value(new DefaultProperty.Builder()
                        		.idShort("ExampleDecimalProperty")
                        		.category("Constant")
                        		.valueType(DataTypeDefXsd.DOUBLE)
                        		.value(Double.valueOf(123.2).toString())
                        		.description(new DefaultLangString.Builder().language("de").text("Numerischer Wert").build())
                        		.build())
                        .value(new DefaultProperty.Builder()
                                .idShort("ExampleProperty")
                                .category("Constant")
                                .descriptions(Arrays.asList(
                                        new DefaultLangString.Builder().text("Example Property object").language("en-us").build(),
                                        new DefaultLangString.Builder().text("Beispiel Property Element").language("de").build()
                                        ))
                                .semanticId(new DefaultReference.Builder()
                                        .key(new DefaultKey.Builder()
                                                .type(KeyTypes.GLOBAL_REFERENCE)
                                                .value("http://acplt.org/Properties/ExampleProperty")
                                                .build())
                                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                                        .build())
                                .value("http://acplt.org/ValueId/ExampleValueId")
                                .valueId(new DefaultReference.Builder()
                                        .key(new DefaultKey.Builder()
                                                .type(KeyTypes.GLOBAL_REFERENCE)
                                                .value("http://acplt.org/ValueId/ExampleValueId")
                                                .build())
                                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                                        .build())
                                .valueType(DataTypeDefXsd.STRING)
                                .build())
                        .value(new DefaultMultiLanguageProperty.Builder()
                                .idShort("ExampleMultiLanguageProperty")
                                .category("Constant")
                                .values(Arrays.asList(
                                        new DefaultLangString.Builder().text("Example value of a MultiLanguageProperty element").language("en-us").build(),
                                        new DefaultLangString.Builder().text("Beispielswert für ein MultiLanguageProperty-Element").language("de").build()
                                        ))
                                .semanticId(new DefaultReference.Builder()
                                        .key(new DefaultKey.Builder()
                                                .type(KeyTypes.GLOBAL_REFERENCE)
                                                .value("http://acplt.org/MultiLanguageProperties/ExampleMultiLanguageProperty")
                                                .build())
                                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                                        .build())
                                .descriptions(Arrays.asList(
                                        new DefaultLangString.Builder().text("Example MultiLanguageProperty object").language("en-us").build(),
                                        new DefaultLangString.Builder().text("Beispiel MultiLanguageProperty Element").language("de").build()
                                        ))
                                .valueId(new DefaultReference.Builder()
                                        .key(new DefaultKey.Builder()
                                                .type(KeyTypes.GLOBAL_REFERENCE)
                                                .value("http://acplt.org/ValueId/ExampleMultiLanguageValueId")
                                                .build())
                                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                                        .build())
                                .build())
                        .value(new DefaultRange.Builder()
                                .idShort("ExampleRange")
                                .category("Parameter")
                                .descriptions(Arrays.asList(
                                        new DefaultLangString.Builder().text("Example Range object").language("en-us").build(),
                                        new DefaultLangString.Builder().text("Beispiel Range Element").language("de").build()
                                        ))
                                .semanticId(new DefaultReference.Builder()
                                        .key(new DefaultKey.Builder()
                                                .type(KeyTypes.GLOBAL_REFERENCE)
                                                .value("http://acplt.org/Ranges/ExampleRange")
                                                .build())
                                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                                        .build())
                                .min("0")
                                .max("100")
                                .valueType(DataTypeDefXsd.INT)
                                .build())
//                        .orderRelevant(true)
                        .build())
                .submodelElement(new DefaultSubmodelElementCollection.Builder()
                        .idShort("ExampleSubmodelCollectionUnordered")
                        .category("Parameter")
                        .descriptions(Arrays.asList(
                                new DefaultLangString.Builder().text("Example SubmodelElementCollectionUnordered object").language("en-us").build(),
                                new DefaultLangString.Builder().text("Beispiel SubmodelElementCollectionUnordered Element").language("de").build()
                                ))
                        .semanticId(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                        .value("http://acplt.org/SubmodelElementCollections/ExampleSubmodelElementCollectionUnordered")
                                        .build())
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
                        .value(new DefaultBlob.Builder()
                                .idShort("ExampleBlob")
                                .category("Parameter")
                                .descriptions(Arrays.asList(
                                        new DefaultLangString.Builder().text("Example Blob object").language("en-us").build(),
                                        new DefaultLangString.Builder().text("Beispiel Blob Element").language("de").build()
                                        ))
                                .semanticId(new DefaultReference.Builder()
                                        .key(new DefaultKey.Builder().type(KeyTypes.GLOBAL_REFERENCE)
                                                .value("http://acplt.org/Blobs/ExampleBlob")
                                                .build())
                                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                                        .build())
                                .contentType("application/pdf")
                                .value(Base64.getDecoder().decode("AQIDBAU="))
                                .build())
                        .value(new DefaultFile.Builder()
                                .idShort("ExampleFile")
                                .category("Parameter")
                                .descriptions(Arrays.asList(
                                        new DefaultLangString.Builder().text("Example File object").language("en-us").build(),
                                        new DefaultLangString.Builder().text("Beispiel File Element").language("de").build()
                                        ))
                                .semanticId(new DefaultReference.Builder()
                                        .key(new DefaultKey.Builder()
                                                .type(KeyTypes.GLOBAL_REFERENCE)
                                                .value("http://acplt.org/Files/ExampleFile")
                                                .build())
                                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                                        .build())
                                .value("file:///TestFile.pdf")
                                .contentType("application/pdf")
                                .build())
                        .value(new DefaultReferenceElement.Builder()
                                .idShort("ExampleReferenceElement")
                                .category("Parameter")
                                .descriptions(Arrays.asList(
                                        new DefaultLangString.Builder().text("Example Reference Element object").language("en-us").build(),
                                        new DefaultLangString.Builder().text("Beispiel Reference Element Element").language("de").build()
                                        ))
                                .semanticId(new DefaultReference.Builder()
                                        .key(new DefaultKey.Builder()
                                                .type(KeyTypes.GLOBAL_REFERENCE).value(
                                                "http://acplt.org/ReferenceElements/ExampleReferenceElement")
                                                .build())
                                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                                        .build())
                                .value(new DefaultReference.Builder()
                                        .key(new DefaultKey.Builder()
                                                .type(KeyTypes.SUBMODEL)
                                                .value("https://acplt.org/Test_Submodel")
                                                .build())
                                        .key(new DefaultKey.Builder()
                                                .type(KeyTypes.SUBMODEL_ELEMENT_COLLECTION)
                                                .value("ExampleSubmodelCollectionOrdered")
                                                .build())
                                        .key(new DefaultKey.Builder()
                                                .type(KeyTypes.PROPERTY)
                                                .value("ExampleProperty")
                                                .build())
                                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                                        .build())
                                .build())
//                        .orderRelevant(false)
                        .build())
                .build();
    }

    public static Submodel createSubmodel4() {
        return new DefaultSubmodel.Builder()
                .idShort("Test_Submodel_Mandatory")
                .id("https://acplt.org/Test_Submodel_Mandatory")
                .kind(ModelingKind.TEMPLATE)
                .submodelElement(new DefaultRelationshipElement.Builder()
                        .idShort("ExampleRelationshipElement")
                        .first(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.SUBMODEL)
                                        .value("https://acplt.org/Test_Submodel_Mandatory")
                                        .build())
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.SUBMODEL_ELEMENT_COLLECTION)
                                        .value("ExampleSubmodelCollectionOrdered")
                                        .build())
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.PROPERTY)
                                        .value("ExampleProperty")
                                        .build())
                                .type(ReferenceTypes.MODEL_REFERENCE)
                                .build())
                        .second(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.SUBMODEL)
                                        .value("https://acplt.org/Test_Submodel_Mandatory")
                                        .build())
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.SUBMODEL_ELEMENT_COLLECTION)
                                        .value("ExampleSubmodelCollectionOrdered")
                                        .build())
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.MULTI_LANGUAGE_PROPERTY)
                                        .value("ExampleMultiLanguageProperty")
                                        .build())
                                .type(ReferenceTypes.MODEL_REFERENCE)
                                .build())
                        .build())
                .submodelElement(new DefaultAnnotatedRelationshipElement.Builder()
                        .idShort("ExampleAnnotatedRelationshipElement")
                        .first(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.SUBMODEL)
                                        .value("https://acplt.org/Test_Submodel_Mandatory")
                                        .build())
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.SUBMODEL_ELEMENT_COLLECTION)
                                        .value("ExampleSubmodelCollectionOrdered")
                                        .build())
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.PROPERTY)
                                        .value("ExampleProperty")
                                        .build())
                                .type(ReferenceTypes.MODEL_REFERENCE)
                                .build())
                        .second(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.SUBMODEL)
                                        .value("https://acplt.org/Test_Submodel_Mandatory")
                                        .build())
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.SUBMODEL_ELEMENT_COLLECTION)
                                        .value("ExampleSubmodelCollectionOrdered")
                                        .build())
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.MULTI_LANGUAGE_PROPERTY)
                                        .value("ExampleMultiLanguageProperty")
                                        .build())
                                .type(ReferenceTypes.MODEL_REFERENCE)
                                .build())
                        .build())
                .submodelElement(new DefaultOperation.Builder()
                        .idShort("ExampleOperation")
                        .kind(ModelingKind.TEMPLATE)
                        .build())
                .submodelElement(new DefaultCapability.Builder()
                        .idShort("ExampleCapability")
                        .build())
                .submodelElement(new DefaultBasicEventElement.Builder()
                        .idShort("ExampleBasicEvent")
                        .direction(Direction.OUTPUT)
                        .kind(ModelingKind.INSTANCE)
                        .state(StateOfEvent.ON)
                        .semanticId(null)
                        .observed(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.SUBMODEL)
                                        .value("https://acplt.org/Test_Submodel_Mandatory")
                                        .build())
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.SUBMODEL_ELEMENT_COLLECTION)
                                        .value("ExampleSubmodelCollectionOrdered")
                                        .build())
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.PROPERTY)
                                        .value("ExampleProperty")
                                        .build())
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
                        .build())
                .submodelElement(new DefaultSubmodelElementCollection.Builder()
                        .idShort("ExampleSubmodelCollectionOrdered")
                        .value(new DefaultProperty.Builder()
                                .idShort("ExampleProperty")
                                .value(null)
                                .valueType(DataTypeDefXsd.STRING)
                                .build())
                        .value(new DefaultMultiLanguageProperty.Builder()
                                .idShort("ExampleMultiLanguageProperty")
                                .build())
                        .value(new DefaultRange.Builder()
                                .idShort("ExampleRange")
                                .min(null)
                                .max(null)
                                .valueType(DataTypeDefXsd.INT)
                                .build())
//                        .orderRelevant(true)
                        .build())
                .submodelElement(new DefaultSubmodelElementCollection.Builder()
                        .idShort("ExampleSubmodelCollectionUnordered")
                        .value(new DefaultBlob.Builder()
                                .idShort("ExampleBlob")
                                .contentType("application/pdf")
                                .build())
                        .value(new DefaultFile.Builder()
                                .idShort("ExampleFile")
                                .value(null)
                                .contentType("application/pdf")
                                .build())
                        .value(new DefaultReferenceElement.Builder() // TODO: add key and type?
                                .idShort("ExampleReferenceElement")
                                .build())
//                        .orderRelevant(false)
                        .build())
                .submodelElement(new DefaultSubmodelElementCollection.Builder()
                        .idShort("ExampleSubmodelCollectionUnordered2")
//                        .orderRelevant(false)
                        .build())
                .build();
    }

    public static Submodel createSubmodel5() {
        return new DefaultSubmodel.Builder()
                .idShort("Test_Submodel2_Mandatory")
                .kind(ModelingKind.INSTANCE)
                .id("https://acplt.org/Test_Submodel2_Mandatory")
                .build();
    }

    public static Submodel createSubmodel6() {
        return new DefaultSubmodel.Builder()
                .idShort("TestSubmodel")
                .descriptions(Arrays.asList(
                        new DefaultLangString.Builder().text("An example submodel for the test application").language("en-us").build(),
                        new DefaultLangString.Builder().text("Ein Beispiel-Teilmodell für eine Test-Anwendung").language("de").build()
                        ))
                .id("https://acplt.org/Test_Submodel_Missing")
                .kind(ModelingKind.INSTANCE)
                .administration(new DefaultAdministrativeInformation.Builder()
                        .version("0.9")
                        .revision("0").build())
                .semanticId(new DefaultReference.Builder()
                        .key(new DefaultKey.Builder()
                                .type(KeyTypes.GLOBAL_REFERENCE)
                                .value("http://acplt.org/SubmodelTemplates/ExampleSubmodel")
                                .build())
                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                        .build())
                .submodelElement(new DefaultRelationshipElement.Builder()
                        .idShort("ExampleRelationshipElement")
                        .category("Parameter")
                        .descriptions(Arrays.asList(
                                new DefaultLangString.Builder().text("Example RelationshipElement object").language("en-us").build(),
                                new DefaultLangString.Builder().text("Beispiel RelationshipElement Element").language("de").build()
                                ))
                        .semanticId(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                        .value("http://acplt.org/RelationshipElements/ExampleRelationshipElement")
                                        .build())
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
                        .first(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.SUBMODEL)
                                        .value("https://acplt.org/Test_Submodel_Missing")
                                        .build())
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.SUBMODEL_ELEMENT_COLLECTION)
                                        .value("ExampleSubmodelCollectionOrdered")
                                        .build())
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.PROPERTY)
                                        .value("ExampleProperty")
                                        .build())
                                .type(ReferenceTypes.MODEL_REFERENCE)
                                .build())
                        .second(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.SUBMODEL)
                                        .value("https://acplt.org/Test_Submodel_Missing")
                                        .build())
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.SUBMODEL_ELEMENT_COLLECTION)
                                        .value("ExampleSubmodelCollectionOrdered")
                                        .build())
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.MULTI_LANGUAGE_PROPERTY)
                                        .value("ExampleMultiLanguageProperty")
                                        .build())
                                .type(ReferenceTypes.MODEL_REFERENCE)
                                .build())
                        .build())
                .submodelElement(new DefaultAnnotatedRelationshipElement.Builder()
                        .idShort("ExampleAnnotatedRelationshipElement")
                        .category("Parameter")
                        .descriptions(Arrays.asList(
                                new DefaultLangString.Builder().text("Example AnnotatedRelationshipElement object").language("en-us").build(),
                                new DefaultLangString.Builder().text("Beispiel AnnotatedRelationshipElement Element").language("de").build()
                                ))
                        .semanticId(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                        .value("http://acplt.org/RelationshipElements/ExampleAnnotatedRelationshipElement")
                                        .build())
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
                        .first(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.SUBMODEL)
                                        .value("https://acplt.org/Test_Submodel_Missing")
                                        .build())
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.SUBMODEL_ELEMENT_COLLECTION)
                                        .value("ExampleSubmodelCollectionOrdered")
                                        .build())
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.PROPERTY)
                                        .value("ExampleProperty")
                                        .build())
                                .type(ReferenceTypes.MODEL_REFERENCE)
                                .build())
                        .second(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.SUBMODEL)
                                        .value("https://acplt.org/Test_Submodel_Missing")
                                        .build())
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.SUBMODEL_ELEMENT_COLLECTION)
                                        .value("ExampleSubmodelCollectionOrdered")
                                        .build())
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.MULTI_LANGUAGE_PROPERTY)
                                        .value("ExampleMultiLanguageProperty")
                                        .build())
                                .type(ReferenceTypes.MODEL_REFERENCE)
                                .build())
                        .annotation(new DefaultProperty.Builder()
                                .kind(ModelingKind.INSTANCE)
                                .idShort("ExampleProperty")
                                .category("Parameter")
                                .value("some example annotation")
                                .valueType(DataTypeDefXsd.STRING)
                                .build())
                        .build())
                .submodelElement(new DefaultOperation.Builder()
                        .idShort("ExampleOperation")
                        .kind(ModelingKind.TEMPLATE)
                        .category("Parameter")
                        .descriptions(Arrays.asList(
                                new DefaultLangString.Builder().text("Example Operation object").language("en-us").build(),
                                new DefaultLangString.Builder().text("Beispiel Operation Element").language("de").build()
                                ))
                        .semanticId(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                        .value("http://acplt.org/Operations/ExampleOperation")
                                        .build())
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
                        .inputVariable(new DefaultOperationVariable.Builder()
                                .value(new DefaultProperty.Builder()
                                        .idShort("ExampleProperty1")
                                        .category("Constant")
                                        .descriptions(Arrays.asList(
                                                new DefaultLangString.Builder().text("Example Property object").language("en-us").build(),
                                                new DefaultLangString.Builder().text("Beispiel Property Element").language("de").build()
                                                ))
                                        .semanticId(new DefaultReference.Builder()
                                                .key(new DefaultKey.Builder()
                                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                                        .value("http://acplt.org/Properties/ExampleProperty")
                                                        .build())
                                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                                .build())
                                        .qualifier(new DefaultQualifier.Builder()
                                                .type("http://acplt.org/Qualifier/ExampleQualifier")
                                                .valueType(DataTypeDefXsd.STRING)
                                                .build())
                                        .value("exampleValue")
                                        .valueType(DataTypeDefXsd.STRING)
                                        .build())
                                .build())
                        .outputVariable(new DefaultOperationVariable.Builder()
                                .value(new DefaultProperty.Builder()
                                        .idShort("ExampleProperty2")
                                        .category("Constant")
                                        .descriptions(Arrays.asList(
                                                new DefaultLangString.Builder().text("Example Property object").language("en-us").build(),
                                                new DefaultLangString.Builder().text("Beispiel Property Element").language("de").build()
                                                ))
                                        .semanticId(new DefaultReference.Builder()
                                                .key(new DefaultKey.Builder()
                                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                                        .value("http://acplt.org/Properties/ExampleProperty")
                                                        .build())
                                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                                .build())
                                        .qualifier(new DefaultQualifier.Builder()
                                                .type("http://acplt.org/Qualifier/ExampleQualifier")
                                                .valueType(DataTypeDefXsd.STRING)
                                                .build())
                                        .value("exampleValue")
                                        .valueType(DataTypeDefXsd.STRING)
                                        .build())
                                .build())
                        .inoutputVariable(new DefaultOperationVariable.Builder()
                                .value(new DefaultProperty.Builder()
                                        .idShort("ExampleProperty3")
                                        .category("Constant")
                                        .descriptions(Arrays.asList(
                                                new DefaultLangString.Builder().text("Example Property object").language("en-us").build(),
                                                new DefaultLangString.Builder().text("Beispiel Property Element").language("de").build()
                                                ))
                                        .semanticId(new DefaultReference.Builder()
                                                .key(new DefaultKey.Builder()
                                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                                        .value("http://acplt.org/Properties/ExampleProperty")
                                                        .build())
                                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                                .build())
                                        .qualifier(new DefaultQualifier.Builder()
                                                .type("http://acplt.org/Qualifier/ExampleQualifier")
                                                .valueType(DataTypeDefXsd.STRING)
                                                .build())
                                        .value("exampleValue")
                                        .valueType(DataTypeDefXsd.STRING)
                                        .build())
                                .build())
                        .build())
                .submodelElement(new DefaultCapability.Builder()
                        .idShort("ExampleCapability")
                        .category("Parameter")
                        .descriptions(Arrays.asList(
                                new DefaultLangString.Builder().text("Example Capability object").language("en-us").build(),
                                new DefaultLangString.Builder().text("Beispiel Capability Element").language("de").build()
                                ))
                        .semanticId(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                        .value("http://acplt.org/Capabilities/ExampleCapability")
                                        .build())
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
                        .build())
                .submodelElement(new DefaultBasicEventElement.Builder()
                        .idShort("ExampleBasicEvent")
                        .kind(ModelingKind.INSTANCE)
                        .category("Parameter")
                        .direction(Direction.INPUT)
                        .messageTopic("topic")
                        .state(StateOfEvent.ON)
                        .descriptions(Arrays.asList(
                                new DefaultLangString.Builder().text("Example BasicEvent object").language("en-us").build(),
                                new DefaultLangString.Builder().text("Beispiel BasicEvent Element").language("de").build()
                                ))
                        .semanticId(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                        .value("http://acplt.org/Events/ExampleBasicEvent")
                                        .build())
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
                        .observed(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.SUBMODEL)
                                        .value("https://acplt.org/Test_Submodel_Missing")
                                        .build())
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.SUBMODEL_ELEMENT_COLLECTION)
                                        .value("ExampleSubmodelCollectionOrdered")
                                        .build())
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.PROPERTY)
                                        .value("ExampleProperty")
                                        .build())
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
                        .build())
                .submodelElement(new DefaultSubmodelElementCollection.Builder()
                        .idShort("ExampleSubmodelCollectionOrdered")
                        .category("Parameter")
                        .descriptions(Arrays.asList(
                                new DefaultLangString.Builder().text("Example SubmodelElementCollectionOrdered object").language("en-us").build(),
                                new DefaultLangString.Builder().text("Beispiel SubmodelElementCollectionOrdered Element").language("de").build()
                                ))
                        .semanticId(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                        .value("http://acplt.org/SubmodelElementCollections/ExampleSubmodelElementCollectionOrdered")
                                        .build())
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
                        .value(new DefaultProperty.Builder()
                                .idShort("ExampleProperty")
                                .category("Constant")
                                .descriptions(Arrays.asList(
                                        new DefaultLangString.Builder().text("Example Property object").language("en-us").build(),
                                        new DefaultLangString.Builder().text("Beispiel Property Element").language("de").build()
                                        ))
                                .semanticId(new DefaultReference.Builder()
                                        .key(new DefaultKey.Builder()
                                                .type(KeyTypes.GLOBAL_REFERENCE)
                                                .value("http://acplt.org/Properties/ExampleProperty")
                                                .build())
                                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                                        .build())
                                .qualifier(new DefaultQualifier.Builder()
                                        .type("http://acplt.org/Qualifier/ExampleQualifier")
                                        .valueType(DataTypeDefXsd.STRING)
                                        .build())
                                .value("exampleValue")
                                .valueType(DataTypeDefXsd.STRING)
                                .build())
                        .value(new DefaultMultiLanguageProperty.Builder()
                                .idShort("ExampleMultiLanguageProperty")
                                .category("Constant")
                                .values(Arrays.asList(
                                        new DefaultLangString.Builder().text("Example value of a MultiLanguageProperty element").language("en-us").build(),
                                        new DefaultLangString.Builder().text("Beispielswert für ein MultiLanguageProperty-Element").language("de").build()
                                        ))
                                .semanticId(new DefaultReference.Builder()
                                        .key(new DefaultKey.Builder()
                                                .type(KeyTypes.GLOBAL_REFERENCE)
                                                .value("http://acplt.org/MultiLanguageProperties/ExampleMultiLanguageProperty")
                                                .build())
                                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                                        .build())
                                .descriptions(Arrays.asList(
                                        new DefaultLangString.Builder().text("Example MultiLanguageProperty object").language("en-us").build(),
                                        new DefaultLangString.Builder().text("Beispiel MultiLanguageProperty Element").language("de").build()
                                        ))
                                .build())
                        .value(new DefaultRange.Builder()
                                .idShort("ExampleRange")
                                .category("Parameter")
                                .descriptions(Arrays.asList(
                                        new DefaultLangString.Builder().text("Example Range object").language("en-us").build(),
                                        new DefaultLangString.Builder().text("Beispiel Range Element").language("de").build()
                                        ))
                                .semanticId(new DefaultReference.Builder()
                                        .key(new DefaultKey.Builder()
                                                .type(KeyTypes.GLOBAL_REFERENCE)
                                                .value("http://acplt.org/Ranges/ExampleRange")
                                                .build())
                                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                                        .build())
                                .min("0")
                                .max("100")
                                .valueType(DataTypeDefXsd.INT)
                                .build())
//                        .orderRelevant(true)
                        .build())
                .submodelElement(new DefaultSubmodelElementCollection.Builder()
                        .idShort("ExampleSubmodelCollectionUnordered")
                        .category("Parameter")
                        .descriptions(Arrays.asList(
                                new DefaultLangString.Builder().text("Example SubmodelElementCollectionUnordered object").language("en-us").build(),
                                new DefaultLangString.Builder().text("Beispiel SubmodelElementCollectionUnordered Element").language("de").build()
                                ))
                        .semanticId(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                        .value("http://acplt.org/SubmodelElementCollections/ExampleSubmodelElementCollectionUnordered")
                                        .build())
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
                        .value(new DefaultBlob.Builder()
                                .idShort("ExampleBlob")
                                .category("Parameter")
                                .descriptions(Arrays.asList(
                                        new DefaultLangString.Builder().text("Example Blob object").language("en-us").build(),
                                        new DefaultLangString.Builder().text("Beispiel Blob Element").language("de").build()
                                        ))
                                .semanticId(new DefaultReference.Builder()
                                        .key(new DefaultKey.Builder()
                                                .type(KeyTypes.GLOBAL_REFERENCE)
                                                .value("http://acplt.org/Blobs/ExampleBlob")
                                                .build())
                                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                                        .build())
                                .contentType("application/pdf")
                                .value(Base64.getDecoder().decode("AQIDBAU="))
                                .build())
                        .value(new DefaultFile.Builder()
                                .idShort("ExampleFile")
                                .category("Parameter")
                                .descriptions(Arrays.asList(
                                        new DefaultLangString.Builder().text("Example File object").language("en-us").build(),
                                        new DefaultLangString.Builder().text("Beispiel File Element").language("de").build()
                                        ))
                                .semanticId(new DefaultReference.Builder()
                                        .key(new DefaultKey.Builder()
                                                .type(KeyTypes.GLOBAL_REFERENCE)
                                                .value("http://acplt.org/Files/ExampleFile")
                                                .build())
                                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                                        .build())
                                .value("file:///TestFile.pdf")
                                .contentType("application/pdf")
                                .build())
                        .value(new DefaultReferenceElement.Builder()
                                .idShort("ExampleReferenceElement")
                                .category("Parameter")
                                .descriptions(Arrays.asList(
                                        new DefaultLangString.Builder().text("Example Reference Element object").language("en-us").build(),
                                        new DefaultLangString.Builder().text("Beispiel Reference Element Element").language("de").build()
                                        ))
                                .semanticId(new DefaultReference.Builder()
                                        .key(new DefaultKey.Builder()
                                                .type(KeyTypes.GLOBAL_REFERENCE)
                                                .value("http://acplt.org/ReferenceElements/ExampleReferenceElement")
                                                .build())
                                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                                        .build())
                                .value(new DefaultReference.Builder()
                                        .key(new DefaultKey.Builder()
                                                .type(KeyTypes.SUBMODEL)
                                                .value("https://acplt.org/Test_Submodel_Missing")
                                                
                                                .build())
                                        .key(new DefaultKey.Builder()
                                                .type(KeyTypes.SUBMODEL_ELEMENT_COLLECTION)
                                                .value("ExampleSubmodelCollectionOrdered")
                                                .build())
                                        .key(new DefaultKey.Builder()
                                                .type(KeyTypes.PROPERTY)
                                                .value("ExampleProperty")
                                                .build())
                                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                                        .build())
                                .build())
                        //.orderRelevant(false)
                        .build())
                .build();
    }

    public static Submodel createSubmodel7() {
        return new DefaultSubmodel.Builder()
                .idShort("TestSubmodel")
                .descriptions(Arrays.asList(
                        new DefaultLangString.Builder().text("An example submodel for the test application").language("en-us").build(),
                        new DefaultLangString.Builder().text("Ein Beispiel-Teilmodell für eine Test-Anwendung").language("de").build()
                        ))
                .id("https://acplt.org/Test_Submodel_Template")
                .kind(ModelingKind.INSTANCE)
                .administration(new DefaultAdministrativeInformation.Builder()
                        .version("0.9")
                        .revision("0")
                        .build())
                .semanticId(new DefaultReference.Builder()
                        .key(new DefaultKey.Builder()
                                .type(KeyTypes.GLOBAL_REFERENCE)
                                .value("http://acplt.org/SubmodelTemplates/ExampleSubmodel")
                                .build())
                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                        .build())
                .kind(ModelingKind.TEMPLATE)
                .submodelElement(new DefaultRelationshipElement.Builder()
                        .idShort("ExampleRelationshipElement")
                        .category("Parameter")
                        .descriptions(Arrays.asList(
                                new DefaultLangString.Builder().text("Example RelationshipElement object").language("en-us").build(),
                                new DefaultLangString.Builder().text("Beispiel RelationshipElement Element").language("de").build()
                                ))
                        .semanticId(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                        .value("http://acplt.org/RelationshipElements/ExampleRelationshipElement")
                                        .build())
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
                        .kind(ModelingKind.TEMPLATE)
                        .first(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.PROPERTY)
                                        .value("ExampleProperty")
                                        .build())
                                .type(ReferenceTypes.MODEL_REFERENCE)
                                .build())
                        .second(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.PROPERTY)
                                        .value("ExampleProperty")
                                        .build())
                                .type(ReferenceTypes.MODEL_REFERENCE)
                                .build())
                        .build())
                .submodelElement(new DefaultAnnotatedRelationshipElement.Builder()
                        .idShort("ExampleAnnotatedRelationshipElement")
                        .category("Parameter")
                        .descriptions(Arrays.asList(
                                new DefaultLangString.Builder().text("Example AnnotatedRelationshipElement object").language("en-us").build(),
                                new DefaultLangString.Builder().text("Beispiel AnnotatedRelationshipElement Element").language("de").build()
                                ))
                        .semanticId(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                        .value("http://acplt.org/RelationshipElements/ExampleAnnotatedRelationshipElement")
                                        .build())
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
                        .kind(ModelingKind.TEMPLATE)
                        .first(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.PROPERTY)
                                        .value("ExampleProperty")
                                        .build())
                                .type(ReferenceTypes.MODEL_REFERENCE)
                                .build())
                        .second(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.PROPERTY)
                                        .value("ExampleProperty")
                                        .build())
                                .type(ReferenceTypes.MODEL_REFERENCE)
                                .build())
                        .build())
                .submodelElement(new DefaultOperation.Builder()
                        .idShort("ExampleOperation")
                        .kind(ModelingKind.TEMPLATE)
                        .category("Parameter")
                        .descriptions(Arrays.asList(
                                new DefaultLangString.Builder().text("Example Operation object").language("en-us").build(),
                                new DefaultLangString.Builder().text("Beispiel Operation Element").language("de").build()
                                ))
                        .semanticId(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                        .value("http://acplt.org/Operations/ExampleOperation")
                                        .build())
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
                        .kind(ModelingKind.TEMPLATE)
                        .inputVariable(new DefaultOperationVariable.Builder()
                                .value(new DefaultProperty.Builder()
                                        .idShort("ExampleProperty")
                                        .category("Constant")
                                        .descriptions(Arrays.asList(
                                                new DefaultLangString.Builder().text("Example Property object").language("en-us").build(),
                                                new DefaultLangString.Builder().text("Beispiel Property Element").language("de").build()
                                                ))
                                        .semanticId(new DefaultReference.Builder()
                                                .key(new DefaultKey.Builder()
                                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                                        .value("http://acplt.org/Properties/ExampleProperty")
                                                        .build())
                                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                                .build())
                                        .kind(ModelingKind.TEMPLATE)
                                        .value(null)
                                        .valueType(DataTypeDefXsd.STRING)
                                        .build())
                                .build())
                        .outputVariable(new DefaultOperationVariable.Builder()
                                .value(new DefaultProperty.Builder()
                                        .idShort("ExampleProperty")
                                        .category("Constant")
                                        .descriptions(Arrays.asList(
                                                new DefaultLangString.Builder().text("Example Property object").language("en-us").build(),
                                                new DefaultLangString.Builder().text("Beispiel Property Element").language("de").build()
                                                ))
                                        .semanticId(new DefaultReference.Builder()
                                                .key(new DefaultKey.Builder()
                                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                                        .value("http://acplt.org/Properties/ExampleProperty")
                                                        .build())
                                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                                .build())
                                        .kind(ModelingKind.TEMPLATE)
                                        .value(null)
                                        .valueType(DataTypeDefXsd.STRING)
                                        .build())
                                .build())
                        .inoutputVariable(new DefaultOperationVariable.Builder()
                                .value(new DefaultProperty.Builder()
                                        .idShort("ExampleProperty")
                                        .category("Constant")
                                        .descriptions(Arrays.asList(
                                                new DefaultLangString.Builder().text("Example Property object").language("en-us").build(),
                                                new DefaultLangString.Builder().text("Beispiel Property Element").language("de").build()
                                                ))
                                        .semanticId(new DefaultReference.Builder()
                                                .key(new DefaultKey.Builder()
                                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                                        .value("http://acplt.org/Properties/ExampleProperty")
                                                        .build())
                                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                                .build())
                                        .kind(ModelingKind.TEMPLATE)
                                        .value(null)
                                        .valueType(DataTypeDefXsd.STRING)
                                        .build())
                                .build())
                        .build())
                .submodelElement(new DefaultCapability.Builder()
                        .idShort("ExampleCapability")
                        .category("Parameter")
                        .descriptions(Arrays.asList(
                                new DefaultLangString.Builder().text("Example Capability object").language("en-us").build(),
                                new DefaultLangString.Builder().text("Beispiel Capability Element").language("de").build()
                                ))
                        .semanticId(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                        .value("http://acplt.org/Capabilities/ExampleCapability")
                                        .build())
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
                        .kind(ModelingKind.TEMPLATE)
                        .build())
                .submodelElement(new DefaultBasicEventElement.Builder()
                        .idShort("ExampleBasicEvent")
                        .category("Parameter")
                        .direction(Direction.OUTPUT)
                        .state(StateOfEvent.OFF)
                        .semanticId(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                        .value("http://acplt.org/Events/ExampleBasicEvent")
                                        .build())
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
                        .descriptions(Arrays.asList(
                                new DefaultLangString.Builder().text("Example BasicEvent object").language("en-us").build(),
                                new DefaultLangString.Builder().text("Beispiel BasicEvent Element").language("de").build()
                                ))
                        .semanticId(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                        .value("http://acplt.org/Events/ExampleBasicEvent")
                                        .build())
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
                        .kind(ModelingKind.TEMPLATE)
                        .observed(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.PROPERTY)
                                        .value("ExampleProperty")
                                        .build())
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
                        .build())
                .submodelElement(new DefaultSubmodelElementCollection.Builder()
                        .idShort("ExampleSubmodelCollectionOrdered")
                        .category("Parameter")
                        .descriptions(Arrays.asList(
                                new DefaultLangString.Builder().text("Example SubmodelElementCollectionOrdered object").language("en-us").build(),
                                new DefaultLangString.Builder().text("Beispiel SubmodelElementCollectionOrdered Element").language("de").build()
                                ))
                        .semanticId(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                        .value("http://acplt.org/SubmodelElementCollections/ExampleSubmodelElementCollectionOrdered")
                                        .build())
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
                        .kind(ModelingKind.TEMPLATE)
                        .value(new DefaultProperty.Builder()
                                .idShort("ExampleProperty")
                                .category("Constant")
                                .descriptions(Arrays.asList(
                                        new DefaultLangString.Builder().text("Example Property object").language("en-us").build(),
                                        new DefaultLangString.Builder().text("Beispiel Property Element").language("de").build()
                                        ))
                                .semanticId(new DefaultReference.Builder()
                                        .key(new DefaultKey.Builder()
                                                .type(KeyTypes.GLOBAL_REFERENCE)
                                                .value("http://acplt.org/Properties/ExampleProperty")
                                                .build())
                                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                                        .build())
                                .kind(ModelingKind.TEMPLATE)
                                .value(null)
                                .valueType(DataTypeDefXsd.STRING)
                                .build())
                        .value(new DefaultMultiLanguageProperty.Builder()
                                .idShort("ExampleMultiLanguageProperty")
                                .category("Constant")
                                .descriptions(Arrays.asList(
                                        new DefaultLangString.Builder().text("Example MultiLanguageProperty object").language("en-us").build(),
                                        new DefaultLangString.Builder().text("Beispiel MultiLanguageProperty Element").language("de").build()
                                        ))
                                .semanticId(new DefaultReference.Builder()
                                        .key(new DefaultKey.Builder()
                                                .type(KeyTypes.GLOBAL_REFERENCE).value(
                                                "http://acplt.org/MultiLanguageProperties/ExampleMultiLanguageProperty")
                                                .build())
                                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                                        .build())
                                .kind(ModelingKind.TEMPLATE)
                                .build())
                        .value(new DefaultRange.Builder()
                                .idShort("ExampleRange")
                                .category("Parameter")
                                .descriptions(Arrays.asList(
                                        new DefaultLangString.Builder().text("Example Range object").language("en-us").build(),
                                        new DefaultLangString.Builder().text("Beispiel Range Element").language("de").build()
                                        ))
                                .semanticId(new DefaultReference.Builder()
                                        .key(new DefaultKey.Builder()
                                                .type(KeyTypes.GLOBAL_REFERENCE)
                                                .value("http://acplt.org/Ranges/ExampleRange")
                                                .build())
                                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                                        .build())
                                .kind(ModelingKind.TEMPLATE)
                                .min(null)
                                .max("100")
                                .valueType(DataTypeDefXsd.INT)
                                .build())
                        .value(new DefaultRange.Builder()
                                .idShort("ExampleRange2")
                                .category("Parameter")
                                .descriptions(Arrays.asList(
                                        new DefaultLangString.Builder().text("Example Range object").language("en-us").build(),
                                        new DefaultLangString.Builder().text("Beispiel Range Element").language("de").build()
                                        ))
                                .semanticId(new DefaultReference.Builder()
                                        .key(new DefaultKey.Builder()
                                                .type(KeyTypes.GLOBAL_REFERENCE)
                                                .value("http://acplt.org/Ranges/ExampleRange")
                                                .build())
                                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                                        .build())
                                .kind(ModelingKind.TEMPLATE)
                                .min("0")
                                .max(null)
                                .valueType(DataTypeDefXsd.INT)
                                .build())
//                        .orderRelevant(true)
                        .build())
                .submodelElement(new DefaultSubmodelElementCollection.Builder()
                        .idShort("ExampleSubmodelCollectionUnordered")
                        .category("Parameter")
                        .descriptions(Arrays.asList(
                                new DefaultLangString.Builder().text("Example SubmodelElementCollectionUnordered object").language("en-us").build(),
                                new DefaultLangString.Builder().text("Beispiel SubmodelElementCollectionUnordered Element").language("de").build()
                                ))
                        .semanticId(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                        .value("http://acplt.org/SubmodelElementCollections/ExampleSubmodelElementCollectionUnordered")
                                        .build())
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
                        .kind(ModelingKind.TEMPLATE)
                        .value(new DefaultBlob.Builder()
                                .idShort("ExampleBlob")
                                .category("Parameter")
                                .descriptions(Arrays.asList(
                                        new DefaultLangString.Builder().text("Example Blob object").language("en-us").build(),
                                        new DefaultLangString.Builder().text("Beispiel Blob Element").language("de").build()
                                        ))
                                .semanticId(new DefaultReference.Builder()
                                        .key(new DefaultKey.Builder()
                                                .type(KeyTypes.GLOBAL_REFERENCE)
                                                .value("http://acplt.org/Blobs/ExampleBlob")
                                                .build())
                                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                                        .build())
                                .kind(ModelingKind.TEMPLATE)
                                .contentType("application/pdf")
                                .build())
                        .value(new DefaultFile.Builder()
                                .idShort("ExampleFile")
                                .category("Parameter")
                                .descriptions(Arrays.asList(
                                        new DefaultLangString.Builder().text("Example File object").language("en-us").build(),
                                        new DefaultLangString.Builder().text("Beispiel File Element").language("de").build()
                                        ))
                                .semanticId(new DefaultReference.Builder()
                                        .key(new DefaultKey.Builder()
                                                .type(KeyTypes.GLOBAL_REFERENCE)
                                                .value("http://acplt.org/Files/ExampleFile")
                                                .build())
                                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                                        .build())
                                .kind(ModelingKind.TEMPLATE)
                                .value(null)
                                .contentType("application/pdf")
                                .build())
                        .value(new DefaultReferenceElement.Builder()
                                .idShort("ExampleReferenceElement")
                                .category("Parameter")
                                .descriptions(Arrays.asList(
                                        new DefaultLangString.Builder().text("Example Reference Element object").language("en-us").build(),
                                        new DefaultLangString.Builder().text("Beispiel Reference Element Element").language("de").build()
                                        ))
                                .semanticId(new DefaultReference.Builder()
                                        .key(new DefaultKey.Builder()
                                                .type(KeyTypes.GLOBAL_REFERENCE)
                                                .value("http://acplt.org/ReferenceElements/ExampleReferenceElement")
                                                .build())
                                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                                        .build())
                                .kind(ModelingKind.TEMPLATE)
                                .build())
                        //.orderRelevant(false)
                        .build())
                .submodelElement(new DefaultSubmodelElementCollection.Builder()
                        .idShort("ExampleSubmodelCollectionUnordered2")
                        .category("Parameter")
                        .descriptions(Arrays.asList(
                                new DefaultLangString.Builder().text("Example SubmodelElementCollectionUnordered object").language("en-us").build(),
                                new DefaultLangString.Builder().text("Beispiel SubmodelElementCollectionUnordered Element").language("de").build()
                                ))
                        .semanticId(new DefaultReference.Builder()
                                .key(new DefaultKey.Builder()
                                        .type(KeyTypes.GLOBAL_REFERENCE)
                                        .value("http://acplt.org/SubmodelElementCollections/ExampleSubmodelElementCollectionUnordered")
                                        .build())
                                .type(ReferenceTypes.GLOBAL_REFERENCE)
                                .build())
                        .kind(ModelingKind.TEMPLATE)
                        //.orderRelevant(false)
                        .build())
                .build();
    }

    public static ConceptDescription createConceptDescription1() {
        return new DefaultConceptDescription.Builder()
                .idShort("TestConceptDescription")
                .descriptions(Arrays.asList(
                        new DefaultLangString.Builder().text("An example concept description for the test application").language("en-us").build(),
                        new DefaultLangString.Builder().text("Ein Beispiel-ConceptDescription für eine Test-Anwendung").language("de").build()
                        ))
                .id("https://acplt.org/Test_ConceptDescription")
                .administration(new DefaultAdministrativeInformation.Builder()
                        .version("0.9")
                        .revision("0")
                        .build())
                .isCaseOf(new DefaultReference.Builder()
                        .key(new DefaultKey.Builder()
                                .type(KeyTypes.GLOBAL_REFERENCE)
                                .value("http://acplt.org/DataSpecifications/ConceptDescriptions/TestConceptDescription")
                                .build())
                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                        .build())
                .build();
    }

    public static ConceptDescription createConceptDescription2() {
        return new DefaultConceptDescription.Builder()
                .idShort("Test_ConceptDescription_Mandatory")
                .id("https://acplt.org/Test_ConceptDescription_Mandatory")
                .build();
    }

    public static ConceptDescription createConceptDescription3() {
        return new DefaultConceptDescription.Builder()
                .idShort("TestConceptDescription1")
                .descriptions(Arrays.asList(
                        new DefaultLangString.Builder().text("An example concept description for the test application").language("en-us").build(),
                        new DefaultLangString.Builder().text("Ein Beispiel-ConceptDescription für eine Test-Anwendung").language("de").build()
                        ))
                .id("https://acplt.org/Test_ConceptDescription_Missing")
                .administration(new DefaultAdministrativeInformation.Builder()
                        .version("0.9")
                        .revision("0")
                        .build())
                .build();
    }

    public static ConceptDescription createConceptDescription4() {
        return new DefaultConceptDescription.Builder()
                .idShort("TestSpec_01")
                .id("http://acplt.org/DataSpecifciations/Example/Identification")
                .administration(new DefaultAdministrativeInformation.Builder()
                        .version("0.9")
                        .revision("0")
                        .build())
                .isCaseOf(new DefaultReference.Builder()
                        .key(new DefaultKey.Builder()
                                .type(KeyTypes.GLOBAL_REFERENCE)
                                .value("http://acplt.org/ReferenceElements/ConceptDescriptionX")
                                .build())
                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                        .build())
                .dataSpecification(new DefaultReference.Builder()
                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                        .key(new DefaultKey.Builder()
                                .type(KeyTypes.GLOBAL_REFERENCE)
                                .value("http://admin-shell.io/DataSpecificationTemplates/DataSpecificationIEC61360/2/0")
                                .build())
                        .build())
                .embeddedDataSpecification(new DefaultDataSpecification.Builder()
                        .id("http://acplt.org/DataSpecifciations/Example/Identification")
                        .dataSpecificationContent(new DefaultDataSpecificationIEC61360.Builder()
                                .preferredNames(Arrays.asList(
                                        new DefaultLangString.Builder().text("Test Specification").language("de").build(),
                                        new DefaultLangString.Builder().text("TestSpecification").language("en-us").build()
                                ))
                                .dataType(DataTypeIEC61360.REAL_MEASURE)
                                .definition(new DefaultLangString.Builder().text("Dies ist eine Data Specification für Testzwecke").language("de").build())
                                .definition(new DefaultLangString.Builder().text("This is a DataSpecification for testing purposes").language("en-us").build())
                                .shortName(new DefaultLangString.Builder().text("Test Spec").language("de").build())
                                .shortName(new DefaultLangString.Builder().text("TestSpec").language("en-us").build())
                                .unit("SpaceUnit")
                                .unitId(new DefaultReference.Builder()
                                        .key(new DefaultKey.Builder()
                                                .type(KeyTypes.GLOBAL_REFERENCE)
                                                
                                                .value("http://acplt.org/Units/SpaceUnit")
                                                .build())
                                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                                        .build())
                                .sourceOfDefinition("http://acplt.org/DataSpec/ExampleDef")
                                .symbol("SU")
                                .valueFormat("string")
                                .value("TEST")
//                                .levelType(LevelType.MIN)
                                .levelType(LevelType.MAX)
                                .valueList(new DefaultValueList.Builder()
                                        .valueReferencePairs(new DefaultValueReferencePair.Builder()
                                                .value("http://acplt.org/ValueId/ExampleValueId")
                                                .valueId(new DefaultReference.Builder()
                                                        .key(new DefaultKey.Builder()
                                                                .type(KeyTypes.GLOBAL_REFERENCE)
                                                                .value("http://acplt.org/ValueId/ExampleValueId")
                                                                .build())
                                                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                                                        .build())
                                                // TODO valueType
                                                .build())
                                        .valueReferencePairs(new DefaultValueReferencePair.Builder()
                                                .value("http://acplt.org/ValueId/ExampleValueId2")
                                                .valueId(new DefaultReference.Builder()
                                                        .key(new DefaultKey.Builder()
                                                                .type(KeyTypes.GLOBAL_REFERENCE)
                                                                .value("http://acplt.org/ValueId/ExampleValueId2")
                                                                .build())
                                                        .type(ReferenceTypes.GLOBAL_REFERENCE)
                                                        .build())
                                                // TODO valueType
                                                .build())
                                        .build())
                                .build())
                        .build())
                .build();
    }

    public static Environment createEnvironment() {
        return new DefaultEnvironment.Builder()
                .assetAdministrationShells(Arrays.asList(
                        createAAS1(),
                        createAAS2(),
                        createAAS3(),
                        createAAS4()))
                .submodels(Arrays.asList(
                        createSubmodel1(),
                        createSubmodel2(),
                        createSubmodel3(),
                        createSubmodel4(),
                        createSubmodel5(),
                        createSubmodel6(),
                        createSubmodel7()))
                .conceptDescriptions(Arrays.asList(
                        createConceptDescription1(),
                        createConceptDescription2(),
                        createConceptDescription3(),
                        createConceptDescription4()))
                .build();
    }

}
